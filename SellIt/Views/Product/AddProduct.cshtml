@using SellIt.Core.ViewModels.Adress
@using SellIt.Core.ViewModels.Product
@model AddEditProductViewModel

<div class="col-10">
    <div>
        <form method="post" enctype="multipart/form-data">
            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>

                </div>
                <div class="form-group">
                    <label asp-for="Description"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="GalleryFiles"></label>
                    <input asp-for="GalleryFiles" class="form-control" />
                    <span asp-validation-for="GalleryFiles" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-3">
                <label asp-for="CategoryName"></label>
                <select class="form-control text-primary" id="categories" asp-for="CategoryName">
                    <option selected disabled><------></></option>
                    @foreach (var category in (IEnumerable<AddEditProductViewModel>)this.ViewData["categories"])
                    {
                        <option value="@category.CategoryName">@category.CategoryName</option>
                    }
                </select>
                <span asp-validation-for="CategoryName" class="text-danger"></span>
                <div class="form-group">
                    <label asp-for="Price"></label>
                    <input asp-for="Price" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="PhoneNumber"></label>
                    <input asp-for="PhoneNumber" class="form-control" onfocus="showMessage()" />
                    <div class="message-container"></div>
                </div>
                <div class="form-group">
    <label asp-for="AddressId"></label>
    <input asp-for="AddressId" id="inputField" class="form-control" />
    <span id="message" style="color: red;"></span>
    <div id="buttons" style="display: none;">
        <button id="yesButton">Yes</button>
        <button id="noButton">No</button>
    </div>
</div>
                @* <input type="text" id="inputField" class="form-control" value="" />
                <button id="viewDataButton">@((string)ViewData["address"])</button>*@
        </form>
        <div />
        <div class="d-flex justify-content-center mt-3">
            <button class="btn btn-primary font-weight-bold">Create Product</button>
        </div>
    </div>
</div>

<script>
    function showMessage() {
        var messageContainer = document.querySelector('.message-container');
        messageContainer.dataset.message = "If you have phone number on your profile it will be wrote atomaticaly";
    }

    // Function to handle copying the value to the input field
  function copyToInputField(event) {
    event.preventDefault(); // Prevent any default button behavior or form submission
    var viewDataValue = '@((string)ViewData["address"])';
    var inputField = document.getElementById('inputField');

    // Set the value in the input field
    inputField.value = viewDataValue;
  }


</script>

<script>
    document.getElementById('inputField').addEventListener('focus', function() {
        var viewDataValue = '@((string)ViewData["address"])';
        var inputValue = this.value.trim();

        if (inputValue === '') {
            this.value = viewDataValue;
        }

        var messageElement = document.getElementById('message');
        var buttonsContainer = document.getElementById('buttons');

        messageElement.innerText = 'Is this your Location: ' + viewDataValue;
        buttonsContainer.style.display = 'block';
    });

    document.addEventListener('click', function(event) {
        var inputField = document.getElementById('inputField');
        var buttonsContainer = document.getElementById('buttons');
        var target = event.target;

        if (!inputField.contains(target) && !buttonsContainer.contains(target)) {
            buttonsContainer.style.display = 'none';
        }
    });

    var yesButton = document.getElementById('yesButton');
    var noButton = document.getElementById('noButton');

    yesButton.addEventListener('click', function() {
        var viewDataValue = '@((string)ViewData["address"])';
        document.getElementById('inputField').value = viewDataValue;
        document.getElementById('message').innerText = '';
        document.getElementById('buttons').style.display = 'none';
    });

    noButton.addEventListener('click', function() {
        var messageElement = document.getElementById('message');
        var buttonsContainer = document.getElementById('buttons');

        messageElement.innerText = '';
        buttonsContainer.style.display = 'none';

        var inputElement = document.createElement('input');
        inputElement.type = 'text';
        inputElement.id = 'customInputField';
        inputElement.placeholder = 'Enter your location';

        var okButton = document.createElement('button');
        okButton.innerText = 'OK';

        okButton.addEventListener('click', function() {
            var customInputValue = document.getElementById('customInputField').value.trim();
            // Make AJAX request to Address/ChangeAddressId with customInputValue
            // Handle the AJAX response as needed

            document.getElementById('inputField').value = customInputValue;
            document.getElementById('customInputField').remove();
            okButton.remove();
        });

        this.parentNode.appendChild(inputElement);
        this.parentNode.appendChild(okButton);
    });
</script>







