@using SellIt.Core.ViewModels.Home
@model HomeViewModel


<form method="get" asp-action="Search" asp-controller="Product">
    <input type="search" value="@ViewData["searchProduct"]" name="searchName" placeholder="Search" style="width:300px"  />
    <a asp-action="Search"></a>
</form>


@if (User.IsInRole("Administrator"))
{
    <div>
        <div>
            <a class="navbar-brand" asp-action="CreateCategory" asp-controller="Category">Create Category</a>
        </div>
        <div>
            <a class="navbar-brand" asp-action="AddProduct" asp-controller="Product" >Create Product</a>
        </div>
        <div>
            <a class="btn btn-danger" asp-action="GetAllProductsForAproove" asp-controller="ForAprooved"> Products For Aproove: @Model.ProductForAprooveCount</a>
        </div>
        
    </div>
}
@if (User.Identity.IsAuthenticated)
{
    
    <div>
        <a class="navbar-brand" asp-action="MyProducts" asp-controller="Product" >My Products</a>
    </div>
}

<div>
    <a class="navbar-brand" asp-action="AddProduct" asp-controller="Product">Create Product</a>
</div>
<div>
    <a class="navbar-brand" asp-action="AllProducts" asp-controller="Product">All Products: @Model.AllProducts</a>

</div>