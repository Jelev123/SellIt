@using SellIt.Core.ViewModels.Product
@model GetByIdAndLikeViewModel




@if (Model.IsAprooved == true)
{
    <a class="btn btn-app bg-success">
        <span class="badge bg-purple">@Model.Viewed</span>
        <i class="fas fa-users"></i> Viewed
    </a>
    
        <btn class="btn btn-app bg-cyan" asp-route-id="@Model.Id">
            <span id="liked" class="badge bg-danger">@Model.LikedCount</span>
            <i id="random" class="fas fa-heart"></i> Likes
        </btn>

    
}

<div class="col-md-4">
    <ul class="list-group">
        <li class="list-group-item">@Model.Name</li>
    </ul>
    <div id="carouselExampleIndicators" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">

            @for (int i = 0; i < Model.Gallery.Count(); i++)
            {
                <li data-target="#carouselExampleIndicators" data-slide-to="@i" class="@(i==0 ? "active" : "") "></li>
            }
        </ol>
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Gallery.Count(); i++)
            {
                <div class="@(i==0 ? "carousel-item active" : "carousel-item") ">
                    <a href="@Model.Gallery[i].URL">
                        <img class="d-block w-100" src="@Model.Gallery[i].URL" alt="@Model.Gallery[i].Name">
                    </a>
                </div>
            }

        </div>
        <a class="carousel-control-prev" href="#carouselExampleIndicators" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#carouselExampleIndicators" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
        <ul class="list-group">
            <li class="list-group-item">Category: @Model.CategoryName</li>
            <li class="list-group-item">@Model.Description</li>
            <li class="list-group-item">@Model.Price $</li>
            <li class="list-group-item">@Model.ProducAddresstId</li>
            <li class="list-group-item">@this.ViewData["address"]</li>
        </ul>
    </div>
    <hr />

    @if (User.Identity.Name != Model.UserName)
    {
        <a asp-action="SendMessage" asp-controller="Message" asp-route-id="@Model.Id" class="btn btn-success">Send Message</a>
    }
</div>


@if (Model.IsAprooved == false)
{
    <h5 style="color:red">The item is checking </h5>
}


@if (User.IsInRole("Administrator"))
{
    @if (Model.IsAprooved == false)
    {
        <a asp-action="SetAproove" asp-controller="ForAprooved" asp-route-id="@Model.Id" class="btn btn-success">Aproove item</a>
    }
}


<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    let likedElement = $("#liked");
    let randomButton = $("#random");
    let modelId = @Model.Id;
    let modelCount = @Model.LikedCount;

    randomButton.on("click", function (event) {
        event.preventDefault();

        let currentLikedCount = parseInt(likedElement.text());
        let newLikedCount = currentLikedCount + 1;

        // Send an AJAX request to the server
        $.ajax({
            url: `/Product/Like?id=${modelId}`,
            type: "POST",
            contentType: "application/json",
            data: JSON.stringify({ likedCount: newLikedCount }),
            success: function (response) {
                // Refresh the page
                location.reload();
            },
            error: function (xhr, status, error) {
                console.log("An error occurred:", error);
            }
        });
    });
</script>