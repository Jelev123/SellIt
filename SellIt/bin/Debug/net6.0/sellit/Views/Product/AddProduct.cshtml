@using SellIt.Core.ViewModels.Product
@model AddEditProductViewModel

<div class="col-10">
    <div>
        <form method="post" enctype="multipart/form-data">
            <div class="col-md-3">
                <div class="form-group">
                    <label asp-for="Name"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger"></span>

                </div>
                <div class="form-group">
                    <label asp-for="Description"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="GalleryFiles"></label>
                    <input asp-for="GalleryFiles" class="form-control" />
                    <span asp-validation-for="GalleryFiles" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-3">
                <label asp-for="CategoryName"></label>
                <select class="form-control text-primary" id="categories" asp-for="CategoryName">
                    <option selected disabled><------></></option>
                    @foreach (var category in (IEnumerable<AddEditProductViewModel>)this.ViewData["categories"])
                    {
                        <option value="@category.CategoryName">@category.CategoryName</option>
                    }
                </select>
                <span asp-validation-for="CategoryName" class="text-danger"></span>
                <div class="form-group">
                    <label asp-for="Price"></label>
                    <input asp-for="Price" class="form-control" />
                </div>
                <div class="form-group">
                    <label asp-for="PhoneNumber"></label>
                    <input asp-for="PhoneNumber" class="form-control" />
                </div>

                <div id="map" style="width:100%;height:500px"> </div>
        </form>
        <div />
        <div class="d-flex justify-content-center mt-3">
            <button class="btn btn-primary font-weight-bold">Create Product</button>
        </div>
    </div>
</div>
                <button id="getLocationBtn">Get Location</button>


<script async
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAml2_vqQLjW-DG3SAc25X_RLtZm3giD2kY&callback=initMap">
</script>

<script>
    var btn = document.getElementById("getLocationBtn");
    btn.onclick = getLocation;

    function getLocation() {
        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(showPosition);
        } else {
            console.log("Geolocation is not supported by this browser.");
        }
    }

    function showPosition(position) {
        var lat = position.coords.latitude;
        var lon = position.coords.longitude;
        var latLng = new google.maps.LatLng(lat, lon);
        var mapOptions = {
            zoom: 8,
            center: latLng,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var map = new google.maps.Map(document.getElementById("map"), mapOptions);
        var marker = new google.maps.Marker({
            position: latLng,
            map: map
        });
    }
                    }
</script>