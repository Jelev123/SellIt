@using SellIt.Core.ViewModels.Product
@model AddEditProductViewModel

<!DOCTYPE html>
<html>
<head>
    <title>Add/Edit Product</title>
    <style>
        .container {
            margin-top: 20px;
        }

        .city-input-container {
            position: relative;
            margin-top: 8px;
        }

        .city-input {
            width: 100%;
            padding: 10px;
            border: none;
            border-bottom: 2px solid #888;
            background-color: transparent;
            color: #333;
            font-size: 16px;
        }

        .city-input:focus {
            outline: none;
            border-bottom-color: #0066ff;
        }

        .map-container {
            width: 100%;
            height: 400px;
            margin-top: 20px;
            display: none;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="row">
            <div class="col-12">
                <form method="post" enctype="multipart/form-data">
                    <div class="form-group">
                        <label for="Name">Name</label>
                        <input type="text" id="Name" class="form-control" asp-for="Name" />
                        <span asp-validation-for="Name" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Description">Description</label>
                        <input type="text" id="Description" class="form-control" asp-for="Description" />
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="GalleryFiles">Gallery Files</label>
                        <input type="file" id="GalleryFiles" class="form-control-file" asp-for="GalleryFiles" multiple />
                        <span asp-validation-for="GalleryFiles" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="CategoryName">Category</label>
                        <select id="CategoryName" class="form-control" asp-for="CategoryName">
                            <option selected disabled>Select a Category</option>
                            @if (ViewData["categories"] is IEnumerable<AddEditProductViewModel> categories && categories.Any())
                            {
                                foreach (var category in categories)
                                {
                                    <option value="@category.CategoryName">@category.CategoryName</option>
                                }
                            }
                            else
                            {
                                <option disabled>No categories available</option>
                            }
                        </select>
                        <span asp-validation-for="CategoryName" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="Price">Price</label>
                        <input type="number" id="Price" class="form-control" asp-for="Price" />
                        <span asp-validation-for="Price" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label for="PhoneNumber">Phone Number</label>
                        <input type="text" id="PhoneNumber" class="form-control" asp-for="PhoneNumber" onfocus="showMessage()" />
                        <div class="message-container"></div>
                    </div>
                    <div class="form-group">
                        <label for="CityInput"></label>
                        <div class="city-input-container">
                            <input type="text" id="CityInput" class="city-input form-control" asp-for="Address" placeholder="Select a City" readonly />
                            <span asp-validation-for="Address" class="text-danger"></span>

                        </div>
                        <div id="map" class="map-container"></div>
                    </div>
                    <div class="d-flex justify-content-center mt-3">
                        <button class="btn btn-primary font-weight-bold">Create Product</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA4-3XNyxLJHdEjsMdWowhTamb-tRTuurg&callback=initMap" async defer></script>

    <script>
        function initMap() {
            var map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: 0, lng: 0 },
                zoom: 2
            });

            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function (position) {
                    var userLocation = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    map.setCenter(userLocation);
                    map.setZoom(12);

                    var geocoder = new google.maps.Geocoder();
                    var cityInput = document.getElementById('CityInput');
                    var mapContainer = document.getElementById('map');
                    var mapShown = false;

                    map.addListener('click', function (event) {
                        geocoder.geocode({ location: event.latLng }, function (results, status) {
                            if (status === 'OK') {
                                if (results[0]) {
                                    var city = getCityFromGeocodeResults(results);
                                    cityInput.value = city;
                                    cityInput.dispatchEvent(new Event('change'));

                                } else {
                                    console.error('No results found.');
                                }
                            } else {
                                console.error('Geocoder failed due to: ' + status);
                            }
                        });
                    });

                    cityInput.addEventListener('click', function () {
                        if (!mapShown) {
                            mapContainer.style.display = 'block';
                            mapShown = true;
                        }
                    });

                    cityInput.addEventListener('input', function () {
                        mapContainer.style.display = 'none';
                        mapShown = false;
                    });
                }, function () {
                    console.error('Error: The Geolocation service failed.');
                });
            } else {
                console.error('Error: Your browser doesn\'t support geolocation.');
            }
        }

        function getCityFromGeocodeResults(results) {
            for (var i = 0; i < results.length; i++) {
                for (var j = 0; j < results[i].address_components.length; j++) {
                    var component = results[i].address_components[j];
                    if (component.types.includes('locality')) {
                        return component.long_name;
                    }
                }
            }
            return '';
        }

        function showMessage() {
            var messageContainer = document.querySelector('.message-container');
            messageContainer.textContent = "If you have a phone number on your profile, it will be automatically written.";
        }
    </script>
</body>
</html>

